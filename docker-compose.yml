services:
  relation-api:
    container_name: relation-api
    build: relation-api/docker
    ports:
      - "8081:80"
    volumes:
      - ./relation-api:/var/www/html/relation-api:cached
    depends_on:
      - mongo
    environment:
      APP_NAME: relation-api
    networks:
      - app_network

  relation-client:
    container_name: relation-client
    image: node:18
    working_dir: /var/www/html/relation-client
    volumes:
      - ./relation-client:/var/www/html/relation-client:cached
    ports:
      - "3000:8080"
    environment:
      - NODE_ENV=development
    command: sh -c "npm install && npm run serve"
    networks:
      - app_network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - app_network
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=E534xv5UTS

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - app_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: QTMQpX6Cw4fe248

  mongo-express:
    image: mongo-express:1.0
    container_name: mongo_express
    ports:
      - "8090:8081"
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: QTMQpX6Cw4fe248
      ME_CONFIG_MONGODB_SERVER: mongo
    networks:
      - app_network

#  relation-generator:
#    build: relation-generator/docker
#    container_name: relation-generator
#    volumes:
#      - ./relation-generator:/var/www/html/relation-generator:cached
#    ports:
#      - "8000:8000"
#    environment:
#      - APP_ENV=production
#      - PYTHONUNBUFFERED=1
#    tty: true
#    networks:
#      - app_network

networks:
  app_network:
    driver: bridge
